{"version":3,"sources":["component/context/TaskListContext.js","component/Task.js","component/TaskList.js","component/TaskForm.js","component/TaskHeader.js","component/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","editItem","setEditItem","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","console","log","children","Task","useContext","className","onClick","class","TaskList","length","TaskForm","setTitle","onSubmit","e","preventDefault","onChange","target","type","placeholder","required","TaskHeader","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b6f0c8d.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\n\r\nexport const TaskListContext = createContext();\r\n\r\nconst TaskListContextProvider = (props) => {\r\n  const initialState = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n\r\n  const [tasks, setTasks] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  // Add tasks\r\n  const addTask = (title) => {\r\n    setTasks([...tasks, { title, id: uuid() }]);\r\n  };\r\n\r\n  // Remove tasks\r\n  const removeTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  // Clear tasks\r\n  const clearList = () => {\r\n    setTasks([]);\r\n  };\r\n\r\n  // Find task\r\n  const findItem = (id) => {\r\n    const item = tasks.find((task) => task.id === id);\r\n\r\n    setEditItem(item);\r\n  };\r\n\r\n  // Edit task\r\n  const editTask = (title, id) => {\r\n    const newTasks = tasks.map((task) =>\r\n      task.id === id ? { title, id } : task\r\n    );\r\n\r\n    console.log(newTasks);\r\n\r\n    setTasks(newTasks);\r\n    setEditItem(null);\r\n  };\r\n\r\n  return (\r\n    <TaskListContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        clearList,\r\n        findItem,\r\n        editTask,\r\n        editItem,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskListContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"./context/TaskListContext\";\r\n\r\nconst Task = ({ task }) => {\r\n  const { removeTask, findItem } = useContext(TaskListContext);\r\n  return (\r\n    <li className=\"list-item\">\r\n      <span>{task.title}</span>\r\n      <div>\r\n        <button\r\n          onClick={() => removeTask(task.id)}\r\n          className=\"btn-delete task-btn\"\r\n        >\r\n          <i class=\"fas fa-trash-alt\"></i>\r\n        </button>\r\n        <button onClick={() => findItem(task.id)} className=\"btn-edit task-btn\">\r\n          <i class=\"fas fa-pen\"></i>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useContext } from \"react\";\r\nimport { TaskListContext } from \"./context/TaskListContext\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = () => {\r\n  const { tasks } = useContext(TaskListContext);\r\n  return (\r\n    <div>\r\n      {tasks.length ? (\r\n        <ul className=\"list\">\r\n          {tasks.map((task) => {\r\n            return <Task task={task} key={task.id} />;\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div className=\"no-tasks\">No Tasks</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { TaskListContext } from \"./context/TaskListContext\";\r\n\r\nconst TaskForm = () => {\r\n  const { addTask, clearList, editTask, editItem } =\r\n    useContext(TaskListContext);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!editItem) {\r\n      addTask(title);\r\n      setTitle(\"\");\r\n    } else {\r\n      editTask(title, editItem.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title);\r\n    } else {\r\n      setTitle(\"\");\r\n    }\r\n  }, [editItem]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        value={title}\r\n        className=\"task-input\"\r\n        placeholder=\"Add Task...\"\r\n        required\r\n      />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task-btn\">\r\n          {editItem ? \"Edit Task\" : \"Add Task\"}\r\n        </button>\r\n        <button onClick={clearList} className=\"btn clear-btn\">\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React from \"react\";\r\n\r\nconst TaskHeader = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Task Manager</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskHeader;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport TaskListContextProvider from \"./context/TaskListContext\";\r\nimport TaskHeader from \"./TaskHeader\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <TaskListContextProvider>\r\n      <div className=\"container\">\r\n        <div className=\"app-wrapper\">\r\n          <TaskHeader />\r\n          <div className=\"main\">\r\n            <TaskForm />\r\n            <TaskList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </TaskListContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./component/App\";\r\nimport \"./component/App.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}